{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/NavBar/navBarItems.js","components/NavBar/NavBar.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PersonLink","person","cn","sex","to","slug","name","PeopleTable","useState","isLoading","setIsLoading","people","setPeople","isError","setIsError","useEffect","result","map","mother","find","motherName","father","fatherName","catch","finally","isPeopleEmpty","length","personSlug","useParams","born","died","navButtons","path","NavBar","button","isActive","App","role","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.678ddc03.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <Link\n    className={cn(\n      { 'has-text-danger': person.sex === 'f' },\n    )}\n    to={`/people/${person.slug}`}\n  >\n    {person.name}\n  </Link>\n);\n","import { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\nexport const PeopleTable: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [people, setPeople] = useState<Person[] | null>(null);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then(result => {\n        setPeople(result.map(person => {\n          return {\n            ...person,\n            mother: result.find(mother => mother.name === person.motherName),\n            father: result.find(father => father.name === person.fatherName),\n          };\n        }));\n      })\n      .catch(() => {\n        setIsError(true);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  const isPeopleEmpty = !isLoading && !isError && people?.length === 0;\n\n  const { personSlug } = useParams();\n\n  return (\n    <div className=\"block\">\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"box table-container\">\n        {isLoading && (\n          <Loader />)}\n\n        {isError && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n\n        {isPeopleEmpty && (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n\n        {!isLoading && people?.length && (\n          <table\n            data-cy=\"peopleTable\"\n            className=\"\n              table\n              is-striped\n              is-hoverable\n              is-narrow\n              is-fullwidth\n              \"\n          >\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Sex</th>\n                <th>Born</th>\n                <th>Died</th>\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n\n            {people?.map(person => (\n              <tbody>\n                <tr\n                  data-cy=\"person\"\n                  className={cn(\n                    { 'has-background-warning': personSlug === person.slug },\n                  )}\n                >\n                  <td>\n                    <PersonLink person={person} />\n                  </td>\n\n                  <td>{person.sex}</td>\n                  <td>{person.born}</td>\n                  <td>{person.died}</td>\n                  <td>\n                    {person.mother\n                      ? <PersonLink person={person.mother} />\n                      : person.motherName || '-'}\n                  </td>\n                  <td>\n                    {person.father\n                      ? <PersonLink person={person.father} />\n                      : person.fatherName || '-'}\n                  </td>\n                </tr>\n              </tbody>\n            ))}\n          </table>\n        )}\n      </div>\n    </div>\n  );\n};\n","export const navButtons = [\n  { name: 'Home', path: '/' },\n  { name: 'People', path: '/people' },\n];\n","import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\nimport { navButtons } from './navBarItems';\n\nexport const NavBar: React.FC = () => (\n  <div className=\"navbar-brand\">\n    {navButtons.map(button => (\n      <NavLink\n        className={({ isActive }) => {\n          return cn(\n            'navbar-item',\n            { 'has-background-grey-lighter': isActive },\n          );\n        }}\n        to={button.path}\n      >\n        {button.name}\n      </NavLink>\n    ))}\n  </div>\n);\n","import {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport './App.scss';\nimport { PeopleTable } from './components/PeopleTable/PeopleTable';\nimport { NavBar } from './components/NavBar/NavBar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <NavBar />\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"/home\"\n            element={(\n              <Navigate\n                to=\"/\"\n                replace\n              />\n            )}\n          />\n          <Route\n            path=\"/\"\n            element={\n              <h1 className=\"title\">Home Page</h1>\n            }\n          />\n\n          <Route path=\"people\">\n            <Route\n              index\n              element={\n                <PeopleTable />\n              }\n            />\n            <Route\n              path=\":personSlug\"\n              element={\n                <PeopleTable />\n              }\n            />\n          </Route>\n\n          <Route\n            path=\"*\"\n            element={\n              <h1 className=\"title\">Page not found</h1>\n            }\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}